---
- hosts: localhost
  vars:
    root_dir: "{{ playbook_dir }}/../../"
  vars_files:
    - ../../vars.local.yml
  tasks:
    - debug:
        msg: "========= ðŸ“¡ Initializing Aggregator Module ðŸ“¡ ========="

    - name: Install docker
      pip:
        name: docker
        state: present

    - name: Install pika package to ensure devs can send messages to the queue
      pip:
        name: pika
        state: present

    - name: Create docker network
      docker_network:
        name: ps2alerts
        state: present

    - name: Build Aggregator Base image (grab a snickers)
      docker_image:
        name: ps2alerts/aggregator
        state: present
        source: build
        tag: base
        force_source: yes
        build:
          pull: no
          path: "{{ root_dir | realpath }}/provisioning/base"

    - name: Build Aggregator Dev image
      docker_image:
        name: ps2alerts/aggregator
        state: present
        source: build
        tag: dev
        force_source: yes
        build:
          pull: no
          path: "{{ playbook_dir }}"

    - name: Get user's current UID
      command: "id -u {{ lookup('ENV', 'USER') }}"
      register: id
      when: id is undefined

      # This step has issues on OSX, not quite sure how to fix it. Gets permission denied within the container.
      # Workaround is to just install npm via brew and npm install, meh.
    - name: Run npm install for Aggregator deps
      docker_container:
        name: ps2alerts-aggregator-npm
        image: node:12
        volumes:
          - "{{ root_dir | realpath }}:/app:rw"
        user: "{{ id.stdout }}:{{ id.stdout }}"
        command: "npm install --prefix /app"
        labels:
          traefik.enable: "false"

    - name: Delete dist folder
      file:
        path: "{{ root_dir }}/dist"
        state: absent

    - name: Start Aggregator Dev Image
      docker_container:
        name: ps2alerts-aggregator
        image: ps2alerts/aggregator:dev
        state: started
        restart: no
        recreate: yes
        restart_policy: "no"
        volumes:
          - "{{ root_dir | realpath }}:/app:rw"
        ports:
          - "1337"
        networks:
          - name: "ps2alerts"
        networks_cli_compatible: no
        tty: true
        env:
          NODE_ENV: "development"
          VERSION: "12345"
          DB_USER: "root"
          DB_PASS: "foobar"
          DB_HOST: "ps2alerts-db"
          DB_PORT: "27017"
          DB_NAME: "ps2alerts"
          DB_DEBUG: "true"
          DB_POOL_SIZE: "20"
          REDIS_HOST: "ps2alerts-redis"
          REDIS_DB: "1"
          API_BASE_URL: "http://dev.api.ps2alerts.com"
          CENSUS_SERVICE_ID: "{{ census_service_id }}"
          LOGGER_TRANSPORTS: "console"
        labels:
          traefik.enable: "false"
